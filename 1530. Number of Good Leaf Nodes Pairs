/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> solve(TreeNode* root,int d,int &count){
        if(root==NULL){
            return {0};
        }
        if(root->left==NULL && root->right==NULL){
            return {1};
        }
        vector<int> left=solve(root->left,d,count);
        vector<int> right=solve(root->right,d,count);
        
        for(auto x : left){
            for(auto y : right){
                if(x>0 && y>0 && x+y<=d){
                    count++;
                }
            }
        }
        vector<int> ans;
        for(auto x : left){
            if(x>0){
                ans.push_back(x+1);
            }
        }
        for(auto y : right){
            if(y>0){
                ans.push_back(y+1);
            }
        }
        return ans;
    }
    int countPairs(TreeNode* root, int distance) {
        int count=0;
        solve(root,distance,count);
        return count;
    }
};
