/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(TreeNode* root,unordered_set<int>&del,vector<TreeNode*> &ans){
        if(root==NULL){
            return NULL;
        }
        root->left=solve(root->left,del,ans);
        root->right=solve(root->right,del,ans);

        if(del.find(root->val)!=del.end()){
            if(root->left){
                ans.push_back(root->left);
            }
            if(root->right){
                ans.push_back(root->right);
            }
            return NULL;
        }
        return root;
    }
    vector<TreeNode* > delNodes(TreeNode* root, vector<int>& to_delete) {
        unordered_set<int>del;
        for(auto a : to_delete){
            del.insert(a);
        }
        vector<TreeNode*>ans;
        solve(root,del,ans);
        if(del.find(root->val)==del.end()){
            ans.push_back(root);
        }
        return ans;
    }
};
